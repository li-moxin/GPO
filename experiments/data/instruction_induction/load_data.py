import os
import json
import random

induce_data_path = os.path.join(os.path.dirname(__file__), 'raw/induce/')
eval_data_path = os.path.join(os.path.dirname(__file__), 'raw/execute/')

# Get a list of tasks (by looking at the names of the files in the induced directory)
tasks = [f.split('.')[0] for f in os.listdir(induce_data_path)] + [f.split('.')[0] for f in os.listdir(eval_data_path)]


def load_data(type, task):
    base_path = induce_data_path if type == 'induce' else eval_data_path
    path = base_path + task + '.json'
    with open(path, 'r') as f:
        data = json.load(f)

    examples = data['examples']
    num_examples = len(examples)

    inputs, outputs = [], []
    for i in range(num_examples):
        data = examples[str(i + 1)]
        if task == 'cause_and_effect':
            cause, effect = data['cause'], data['effect']
            # Pick an order randomly
            if random.random() < 0.5:
                input_ = f'Sentence 1: {cause} Sentence 2: {effect}'
            else:
                input_ = f'Sentence 1: {effect} Sentence 2: {cause}'
            output_ = [cause]
        elif task == 'common_concept':
            items = data['items']
            # Make comma separated list of items
            input_ = ', '.join(items[:-1])
            output_ = data['all_common_concepts']
        elif task == 'rhymes':
            input_, output_ = data['input'], data['other_rhymes']
        elif 'translation' in task:
            input_, output_ = data['input'], data['possible_translations']
        else:
            if data == None:
                input_, output_ = None, [None]
            else:
                input_, output_ = data['input'], [data['output']]
        inputs.append(input_)
        outputs.append(output_)
    return inputs, outputs


# randomly sampled indexes. Use these fixed training and validation data.

train_sample_index = [[231, 480, 928, 418, 794, 662, 508, 224, 975, 370, 766, 386, 449, 251, 624, 406, 154, 412, 965, 282, 14, 402, 355, 718, 65, 40, 491, 713, 184, 348, 403, 436, 687, 619, 203, 178, 736, 857, 654, 742, 833, 474, 859, 20, 16, 695, 973, 261, 589, 324, 549, 573, 494, 901, 215, 729, 563, 25, 606, 801, 781, 539, 983, 455, 795, 897, 377, 181, 849, 445, 391, 26, 273, 860, 941, 128, 809, 743, 22, 664, 923, 10, 109, 9, 384, 825, 346, 407, 925, 134, 892, 270, 47, 986, 19, 845, 218, 997, 242, 800], [907, 372, 692, 698, 726, 475, 309, 506, 163, 597, 868, 862, 52, 9, 144, 321, 825, 725, 331, 759, 606, 723, 921, 669, 864, 156, 242, 301, 987, 710, 150, 610, 425, 264, 971, 226, 748, 373, 286, 636, 505, 618, 507, 497, 308, 556, 619, 780, 648, 872, 745, 656, 210, 545, 100, 200, 631, 268, 59, 514, 33, 103, 56, 198, 812, 47, 615, 845, 591, 108, 532, 774, 51, 362, 239, 728, 455, 808, 271, 137, 939, 561, 853, 25, 803, 129, 602, 343, 155, 39, 544, 186, 869, 320, 92, 766, 811, 423, 632, 188], [677, 557, 438, 712, 427, 161, 932, 136, 828, 719, 468, 226, 486, 888, 210, 310, 90, 475, 886, 823, 722, 143, 879, 258, 921, 414, 778, 321, 624, 688, 18, 311, 360, 962, 529, 229, 771, 971, 370, 832, 1, 693, 846, 795, 355, 596, 275, 865, 284, 3, 124, 23, 637, 291, 236, 82, 809, 640, 134, 128, 670, 238, 451, 536, 450, 839, 882, 756, 327, 644, 397, 462, 878, 358, 558, 894, 330, 827, 356, 923, 717, 805, 37, 951, 555, 474, 922, 33, 76, 60, 22, 703, 320, 168, 219, 965, 144, 379, 114, 504], [744, 700, 169, 688, 390, 883, 125, 454, 933, 392, 322, 334, 494, 220, 575, 304, 279, 320, 107, 269, 133, 177, 771, 906, 346, 30, 38, 272, 274, 327, 918, 350, 980, 860, 140, 129, 62, 356, 27, 694, 537, 564, 9, 757, 475, 556, 895, 270, 541, 229, 182, 802, 893, 17, 507, 273, 69, 831, 406, 975, 230, 732, 683, 449, 234, 251, 85, 977, 651, 811, 819, 875, 93, 647, 518, 39, 568, 762, 582, 130, 116, 258, 871, 259, 756, 132, 548, 693, 103, 49, 905, 300, 687, 625, 192, 577, 108, 645, 86, 903], [267, 691, 471, 313, 796, 450, 930, 854, 149, 943, 619, 469, 119, 197, 736, 100, 602, 570, 773, 745, 790, 28, 285, 499, 749, 117, 105, 88, 795, 984, 192, 95, 309, 952, 955, 261, 185, 35, 634, 445, 829, 868, 367, 863, 252, 900, 909, 225, 823, 633, 34, 190, 179, 232, 576, 169, 152, 337, 0, 203, 843, 549, 316, 767, 80, 70, 689, 530, 338, 51, 430, 335, 240, 459, 272, 237, 604, 737, 14, 807, 436, 346, 235, 50, 254, 324, 637, 579, 876, 154, 527, 315, 391, 846, 877, 864, 669, 756, 534, 454]]

eval_sample_index = [[563, 166, 588, 61, 567, 824, 106, 915, 406, 67, 892, 607, 327, 221, 150, 769, 579, 716, 42, 363, 362, 130, 72, 795, 382, 162, 36, 990, 908, 842, 73, 771, 173, 592, 598, 317, 482, 16, 762, 652, 413, 880, 565, 462, 35, 328, 326, 853, 409, 657, 651, 289, 650, 141, 965, 416, 991, 186, 492, 354, 476, 132, 584, 622, 385, 606, 817, 322, 190, 174, 297, 984, 393, 238, 316, 355, 47, 999, 820, 571, 855, 151, 699, 753, 992, 876, 440, 614, 232, 854, 85, 196, 877, 268, 175, 812, 994, 874, 152, 265], [658, 428, 602, 445, 375, 664, 711, 265, 503, 406, 23, 918, 605, 321, 643, 213, 297, 507, 841, 572, 773, 724, 325, 231, 770, 191, 666, 645, 430, 109, 714, 276, 551, 832, 663, 229, 746, 996, 547, 330, 521, 980, 489, 287, 789, 218, 96, 988, 965, 363, 247, 543, 650, 638, 846, 821, 854, 266, 269, 426, 644, 126, 137, 230, 631, 601, 685, 36, 580, 436, 182, 192, 481, 256, 421, 11, 301, 84, 203, 835, 908, 958, 125, 238, 817, 680, 759, 15, 121, 56, 765, 322, 828, 22, 802, 654, 350, 93, 826, 615], [358, 651, 730, 187, 641, 831, 36, 363, 446, 248, 526, 37, 921, 325, 536, 700, 854, 347, 433, 443, 216, 534, 274, 605, 230, 236, 592, 280, 349, 120, 936, 346, 430, 38, 593, 311, 743, 460, 435, 203, 495, 913, 237, 258, 583, 429, 614, 792, 622, 650, 204, 467, 839, 830, 759, 659, 516, 352, 324, 783, 977, 668, 293, 403, 66, 934, 646, 564, 458, 291, 121, 294, 889, 966, 63, 328, 297, 388, 774, 310, 176, 246, 292, 535, 836, 745, 888, 117, 479, 877, 271, 785, 955, 391, 669, 143, 819, 421, 968, 489], [858, 763, 201, 834, 500, 392, 902, 109, 943, 206, 246, 947, 234, 329, 867, 609, 270, 305, 211, 927, 220, 283, 782, 625, 507, 729, 748, 890, 342, 472, 376, 227, 972, 485, 849, 868, 819, 793, 222, 836, 946, 534, 956, 441, 455, 114, 850, 864, 639, 935, 697, 958, 531, 620, 11, 257, 266, 804, 661, 111, 82, 417, 153, 221, 39, 721, 897, 505, 578, 811, 160, 645, 454, 886, 852, 841, 383, 487, 404, 447, 178, 149, 465, 750, 67, 183, 362, 104, 96, 957, 511, 653, 416, 224, 828, 397, 428, 161, 127, 875], [540, 767, 803, 318, 208, 921, 629, 996, 373, 682, 316, 207, 177, 875, 999, 596, 866, 772, 809, 722, 867, 503, 402, 884, 141, 962, 72, 847, 939, 13, 611, 976, 522, 255, 173, 66, 425, 305, 795, 289, 496, 853, 700, 52, 681, 974, 898, 67, 38, 877, 638, 228, 395, 660, 110, 506, 501, 671, 643, 198, 382, 885, 574, 100, 210, 688, 386, 544, 0, 242, 403, 802, 81, 459, 557, 394, 404, 263, 576, 253, 702, 296, 330, 5, 248, 62, 649, 196, 917, 24, 324, 986, 430, 560, 436, 582, 519, 146, 892, 169]]

#train_sample_index_order = [[184, 624, 449, 508, 766, 402, 224, 386, 203, 178, 794, 975, 370, 282, 14, 718, 928, 662, 403, 965, 687, 40, 412, 348, 154, 251, 65, 231, 406, 480, 355, 713, 619, 418, 491, 436], [65, 965, 480, 282, 975, 14, 508, 766, 40, 406, 687, 251, 624, 184, 355, 718, 231, 436, 370, 178, 794, 491, 402, 403, 418, 224, 412, 662, 348, 619, 203, 928, 386, 154, 449, 713], [624, 403, 154, 402, 436, 687, 231, 14, 508, 718, 975, 480, 203, 406, 370, 713, 40, 412, 662, 766, 619, 928, 184, 178, 355, 965, 282, 251, 348, 418, 491, 386, 794, 449, 65, 224], [718, 184, 231, 418, 355, 406, 449, 65, 412, 965, 251, 619, 178, 348, 491, 224, 687, 766, 975, 14, 508, 386, 402, 370, 662, 40, 480, 282, 794, 928, 436, 203, 713, 154, 624, 403], [406, 713, 491, 224, 436, 418, 412, 794, 624, 370, 251, 619, 348, 508, 662, 718, 687, 480, 386, 355, 403, 449, 40, 178, 65, 203, 231, 154, 965, 14, 184, 975, 282, 766, 928, 402], [231, 508, 348, 386, 406, 975, 224, 687, 355, 794, 718, 203, 65, 449, 624, 184, 402, 154, 370, 403, 480, 251, 40, 14, 436, 928, 491, 965, 619, 766, 418, 282, 412, 662, 713, 178], [619, 713, 449, 14, 718, 224, 508, 348, 436, 386, 402, 154, 184, 766, 251, 406, 65, 491, 418, 370, 975, 480, 40, 203, 965, 412, 662, 624, 178, 687, 794, 403, 231, 928, 355, 282], [386, 624, 402, 40, 491, 975, 965, 355, 662, 713, 412, 449, 619, 370, 154, 403, 406, 251, 480, 178, 65, 418, 348, 14, 928, 224, 436, 766, 508, 203, 687, 282, 794, 184, 231, 718], [231, 65, 794, 178, 480, 402, 662, 624, 282, 418, 386, 975, 449, 508, 412, 40, 203, 713, 687, 184, 436, 355, 766, 491, 718, 224, 406, 928, 348, 965, 403, 14, 154, 619, 251, 370], [412, 348, 794, 40, 231, 508, 766, 154, 928, 184, 406, 355, 251, 386, 624, 480, 178, 282, 418, 224, 65, 14, 370, 403, 491, 687, 449, 713, 436, 619, 975, 402, 662, 203, 965, 718], [65, 975, 687, 662, 40, 224, 231, 14, 412, 928, 713, 370, 619, 282, 178, 491, 418, 436, 184, 449, 718, 348, 386, 794, 402, 355, 251, 480, 624, 154, 406, 508, 766, 203, 403, 965], [348, 449, 412, 662, 14, 184, 975, 178, 436, 386, 491, 624, 619, 402, 713, 418, 355, 231, 965, 403, 406, 65, 718, 928, 224, 40, 508, 794, 251, 203, 687, 154, 370, 282, 480, 766], [619, 718, 412, 402, 282, 203, 370, 766, 178, 713, 65, 687, 928, 251, 355, 624, 662, 965, 154, 40, 418, 231, 14, 794, 184, 975, 480, 449, 436, 224, 348, 406, 491, 386, 508, 403], [386, 154, 975, 624, 687, 65, 14, 480, 619, 418, 794, 436, 718, 403, 508, 40, 178, 370, 251, 231, 402, 203, 766, 355, 282, 406, 184, 662, 224, 449, 412, 713, 348, 928, 491, 965], [687, 355, 491, 251, 412, 386, 402, 40, 184, 224, 508, 370, 619, 480, 975, 449, 203, 406, 65, 282, 418, 178, 718, 231, 965, 713, 766, 436, 348, 154, 794, 662, 624, 403, 14, 928]]

#eval_sample_index_order = [[769, 36, 382, 221, 73, 317, 990, 915, 327, 150, 824, 42, 173, 67, 363, 607, 842, 592, 579, 588, 166, 162, 106, 892, 795, 563, 406, 61, 72, 130, 567, 598, 771, 362, 716, 908], [317, 166, 327, 771, 716, 588, 406, 567, 592, 162, 67, 106, 36, 607, 892, 173, 61, 990, 221, 382, 579, 842, 795, 363, 824, 150, 908, 598, 915, 130, 563, 72, 769, 42, 73, 362], [221, 73, 162, 563, 72, 990, 915, 567, 842, 607, 588, 406, 598, 892, 362, 130, 173, 317, 908, 150, 363, 592, 327, 382, 67, 106, 36, 824, 769, 795, 771, 716, 166, 61, 579, 42], [579, 42, 824, 406, 588, 130, 563, 382, 769, 716, 162, 106, 842, 567, 36, 598, 363, 173, 362, 908, 166, 607, 892, 73, 61, 795, 771, 592, 72, 221, 150, 990, 915, 317, 67, 327], [990, 363, 842, 73, 162, 406, 67, 36, 173, 130, 592, 915, 106, 892, 824, 382, 908, 221, 150, 771, 166, 579, 598, 327, 716, 588, 72, 563, 607, 61, 317, 362, 42, 567, 795, 769], [150, 173, 892, 607, 769, 162, 327, 221, 908, 73, 362, 72, 579, 166, 567, 61, 795, 67, 406, 563, 106, 588, 42, 842, 592, 382, 716, 598, 130, 317, 771, 363, 36, 915, 824, 990], [406, 130, 150, 908, 892, 990, 317, 716, 592, 72, 61, 67, 771, 567, 173, 588, 221, 382, 362, 842, 327, 166, 36, 73, 42, 363, 162, 106, 563, 915, 579, 795, 769, 824, 607, 598], [892, 588, 842, 166, 567, 592, 990, 130, 563, 162, 716, 579, 382, 769, 150, 824, 317, 67, 915, 406, 771, 72, 73, 42, 221, 173, 61, 327, 598, 607, 363, 795, 36, 908, 106, 362], [362, 716, 406, 72, 795, 73, 607, 221, 61, 173, 563, 166, 892, 915, 150, 842, 67, 579, 130, 588, 592, 908, 771, 162, 769, 317, 36, 567, 327, 990, 42, 106, 363, 598, 824, 382], [769, 173, 892, 36, 795, 908, 72, 567, 150, 771, 73, 824, 327, 42, 382, 67, 61, 221, 990, 716, 406, 588, 106, 363, 842, 162, 592, 607, 915, 563, 130, 166, 598, 362, 317, 579], [824, 598, 150, 72, 990, 61, 842, 892, 173, 130, 362, 771, 42, 567, 363, 716, 908, 406, 317, 221, 579, 327, 563, 106, 36, 915, 162, 769, 795, 592, 73, 166, 588, 382, 607, 67], [317, 61, 406, 362, 382, 36, 42, 150, 592, 771, 795, 567, 588, 769, 607, 598, 73, 162, 166, 824, 716, 908, 106, 990, 72, 842, 915, 892, 579, 327, 173, 67, 130, 563, 363, 221], [908, 769, 990, 130, 67, 563, 317, 607, 406, 162, 173, 716, 588, 567, 36, 61, 842, 106, 382, 363, 221, 579, 150, 892, 824, 327, 42, 166, 592, 72, 73, 771, 362, 598, 795, 915], [588, 221, 795, 42, 716, 990, 892, 842, 769, 362, 598, 130, 317, 915, 363, 567, 61, 592, 327, 173, 563, 72, 150, 406, 771, 824, 162, 106, 166, 67, 908, 73, 607, 382, 36, 579], [106, 73, 327, 166, 795, 824, 990, 716, 567, 598, 42, 67, 892, 221, 363, 915, 317, 382, 36, 842, 771, 150, 908, 563, 769, 579, 592, 588, 362, 406, 61, 173, 72, 607, 162, 130]]


parameters = {"yelp": {"num_subsamples": 6, "num_demos": 6, "conf_threshold": 0.83},
              "flipkart": {"num_subsamples": 6, "num_demos": 6, "conf_threshold": 0.83},
              "imdb": {"num_subsamples": 6, "num_demos": 6},
              "amazon_polarity":{"num_subsamples": 6, "num_demos": 6},
              "mnli": {"num_subsamples": 4, "num_demos": 4},
              "anli": {"num_subsamples": 4, "num_demos": 4},
              "drop_spans": {"num_subsamples": 6, "num_demos": 6, "conf_threshold": 0.33},
              "drop_number": {"num_subsamples": 6, "num_demos": 6, "conf_threshold": 0.33},
              "piqa": {"num_subsamples": 6, "num_demos": 6, "conf_threshold": 0.83},
              "openbookqa": {"num_subsamples": 6, "num_demos": 6, "conf_threshold": 0.83},
              "socialiqa": {"num_subsamples": 6, "num_demos": 6, "conf_threshold": 0.83},
              "rte": {"num_subsamples": 4, "num_demos": 4},
              "hans": {"num_subsamples": 4, "num_demos": 4},
              "dstc-7": {"num_subsamples": 9, "num_demos": 9},
              "ubuntu": {"num_subsamples": 9, "num_demos": 9},
              "mutual": {"num_subsamples": 9, "num_demos": 9},
             }
             
             
